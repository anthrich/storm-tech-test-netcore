@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Models.TodoLists
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
            
            <form method="get" asp-action="Detail">
                <input type="hidden" name="todoListId" value="@Model.TodoListId" />
                <label asp-for="HideCompleted"></label>
                <input type="checkbox" asp-for="HideCompleted" onchange="this.form.submit()" />
            </form>
        </li>
        
        <li class="list-group-item">
            <div class="row">
                <div class="col-md-1">
                    @Html.Partial(
                        "Sorter",
                        Model,
                        new ViewDataDictionary(ViewData)
                        {
                            {"RelevantProperty", TodoListDetailViewmodel.SortProperty.Rank}
                        })
                </div>
                <div class="col-md-2">
                    @Html.Partial(
                        "Sorter",
                        Model,
                        new ViewDataDictionary(ViewData)
                        {
                            {"RelevantProperty", TodoListDetailViewmodel.SortProperty.Importance}
                        })
                </div>
            </div>
        </li>
        
        @foreach (var item in Model.GetItems())
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass">
                <div class="row">
                    <div class="col-md-1">@item.Rank</div>
                    <div class="col-md-2">@item.Importance</div>
                    <div class="col-md-5">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-4 text-right">
                        <small>
                            @item.ResponsibleParty.UserName
                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>
                        </small>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>